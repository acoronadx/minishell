echo hola mundo                         # Builtin
ls -l /bin                              # Externo simple
/bin/pwd                                     # Builtin
/bin/env                                     # Builtin          ¡¡¡CUIDADO BASH IMPRIME EN ULTIMO LUGAR LA RUTA AL ÚLTIMO COMAND0!!!
/bin/echo hola > file.txt                    # Redirección de salida
cat < file.txt                          # Redirección de entrada
/bin/echo otra >> file.txt                   # Append
cat noexiste 2> err.txt                 # Redirigir stderr
ls 1> out.txt 2> err.txt                # stdout y stderr separados
ls &> todo.txt                          # stdout y stderr juntos
/bin/echo hola >| file.txt                   # Redirección forzada
cat <&0                                # Duplicar entrada
echo $?									# Comprueba que el código de salida sea el mismo!!
/bin/echo hola >&1                           # Duplicar salida
/bin                                   # Ejecutar un directorio → EISDIR
./noexistente                          # Comando no encontrado → ENOENT    ¡¡¡¡¡ESTO DEBERÍA DEVOLVER NO SUCH FILE OR DIRECTORY!!!
ls > /no_perm                         # Sin permisos → EACCES
/bin/echo hola > /root/test.txt            # EACCES por falta de permisos
/bin/echo $HOME
/bin/echo "$PATH"
/bin/echo $HOME $PATH
/bin/echo uno && /bin/echo dos
/bin/false || /bin/echo se ejecuta
false && /bin/echo no se ejecuta
/bin/echo uno; /bin/echo dos
(/bin/echo subshell)
(/bin/echo uno && /bin/echo dos)
/bin/echo hola > out.txt && cat < out.txt
/bin/echo err > /tmp/test 2>> /tmp/test						#Como es evidente, hay que comprobar el documento test en la carpeta tmp
(/bin/echo hola > hola.txt; cat hola.txt)
/bin/echo ""                   # Vacío entre comillas
/bin/echo exportando; /usr/bin/env | /usr/bin/grep TEST
/bin/echo exportando; /usr/bin/env | /usr/bin/grep HOME
'/bin/echo hola'               # Comillas simples sin expansión
/bin/echo hola\ mundo          # Escape
echo uno\ dos\ tres				# Esperado: uno dos tres
echo signo\? interrogacion
echo barra\|vertical
echo barra\\invertida
/bin/echo comilla\'simple
/bin/echo comilla\"doble
/bin/echo "comilla\"doble"
/bin/echo 'comilla\'simple'
/bin/echo 'comilla\'simple''
/bin/echo expansion\$USER
"/bin/echo hola"               # Comillas dobles
/bin/echo uno | tr a-z A-Z > upper.txt
cat < upper.txt | grep UNO >> grep_result.txt
(/bin/echo uno && /bin/echo dos) | grep uno > pipe_output.txt
(/bin/echo uno; /bin/echo dos) && /bin/echo tres || /bin/echo cuatro
/bin/echo uno; /bin/echo dos | grep dos

#  /bin/echo $HOME "$PATH" hola\ mundo  uno\ dos\ tres signo\? interrogacion barra\|vertical barra\\invertida  comilla\'simple comilla\"doble "comilla\"doble" 'comilla\'simple'' expansion\$USER 

cat << EOF
linea 1
linea 2
EOF

+

/bin/echo heredoc >> prueba.txt << EOF     ¡¡¡¡¡¡¡¡¡ TODO TIPO DE PROBLEMAS CON EOF !!!!!!!
esto
es
una
prueba
EOF

+

cat << 'EOF'
$HOME no debe expandirse
EOF

+

/bin/echo $?      ¡¡¡¡¡¡¡ FALTA PROBARLO CON SALIDAS DE ERROR INTERRUPCIONES DE PROGRAMA ETC !!!!!!!


/bin/echo fondo &   ¡¡¡¡¡¡¡¡ HAY QUE GESTIONARLO EN EL BUCLE PRINCIPAL CON UNA ESTRUCTURA PROPIA PARA GUARDAR EL ESTADO !!!!!!!!

+

ls > out.txt 2>&1 &

+

(/bin/echo uno > uno.txt) & /bin/echo dos >> dos.txt

+

sleep 1 &
/bin/echo terminado

+

(/bin/echo uno && sleep 1) &

+

/bin/echo inicio && cat << EOF | grep hola > resultado.txt
hola mundo
chao
EOF

+

/bin/echo uno > uno.txt & /bin/echo dos >> dos.txt

+

/bin/echo uno | /bin/echo dos > file.txt &



#!/bin/bash
./minishell << EOF
/bin/echo hola
cat << E
uno
dos
E
exit
EOF



/*
acoronad@acoronad:~/Documentos/FORMACIÓN/42/MINISHELL/minishell_arai$ car << 'EOF'
> $HOME no debe expandirse
> EOF
No se ha encontrado la orden «car», pero se puede instalar con:
sudo apt install ucommon-utils
acoronad@acoronad:~/Documentos/FORMACIÓN/42/MINISHELL/minishell_arai$ cat << 'EOF'
> $HOME no debe expandirse
> EOF
$HOME no debe expandirse
*/


echo $a""a
echo $a"" a
echo $""
echo $2""
echo $variablequenoexiste""
echo $USER""
echo '$USER'""
echo 1 $2 $3"" $4"" 5 $seis $siete"" 8
echo 1 $USER"" $USER"" $USER"" 4
echo 1 $2"" $3"" $4"" $5"" 6

echo "$USER''z"
echo "$USER""z"
echo "$USER''"
echo 1 $2 $3 $4 $5 6
echo 1 $2 $3"" $4 $5"" 6
echo a'bc'd
echo 'foo'bar'

# echo $a""a $a"" a $"" $2"" $variablequenoexiste"" $USER"" '$USER'"" 1 $2 $3"" $4"" 5 $seis $siete"" 8 1 $USER"" $USER"" $USER"" 4 1 $2"" $3"" $4"" $5"" 6 "$USER''z" "$USER""z" "$USER''" 1 $2 $3 $4 $5 6 1 $2 $3"" $4 $5"" 6 a'bc'd


# Mejorar mensajes de error:

""                         # Vacío pero válido
ls -z                     # Opción inválida, debe mostrar error         ¡¡¡¡¡¡¡¡¡¡¡ UNIFICAR EL IDIOMA EN LAS RESPUESTAS !!!!!!!!!!
