PARA COMPROBAR LEAKS:
*He creado el archivo readline.supp que suprime todas las advertencias relativas al uso de readline.
El comando para ejecutar Valgrind discriminando readline es:

valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --suppressions=readline.supp ./minishell

Unset
echo $?

Unset
ls

cd /tmp && pwd && echo hola

cd /home && env

export TEMP_VAR=hello && echo $TEMP_VAR && unset TEMP_VAR

env && exit

export VAR=42 && echo $VAR

echo "Bye!" && exit

cat Makefile | grep libft | echo "si"

echo "hola\nque\ntal\n" | grep que

echo $SHLVL
bash
echo $SHLVL

echo $SHLVL
./minishell
echo $SHLVL

ls
echo $_

echo "dsjskdfjk
> sdffd"
dsjskdfjk
sdffd

grep "cadena a buscar
> "
Makefile
Makefile




^X^C
acoronad@acoronad:~/Documentos/42/minishell/minishell$ find . -name "Ma
> kefile"
acoronad@acoronad:~/Documentos/42/minishell/minishell$ ls "li
> bft"
ls: no se puede acceder a 'li'$'\n''bft': No existe el archivo o el directorio

-----------------------------------------------------------------------------

init_shell:
Comprobar la respuesta de bash y asegurarnos que los mensajes de error sean los mismos en caso de fallo de malloc y ft_strdup

Gestionar comillas sin cerrar o caracteres especiales no especificados en el enunciado como \ (barra invertida) o ; (punto y coma).

Gestionar que la ’ evite que el shell interprete los metacaracteres en la secuencia entrecomillada.

Gestionar que la " evite que el shell interprete los metacaracteres en la secuencia
entrecomillada exceptuando $ (signo de dólar).

Gestionar el parseo de una manera que permita distinguir entre builtins y cmd.

Gestionar $?

Gestionar | y redirecciones < >

Gestionar && y más de un builtin por prompt
echo "Bye!" && exit

Gestionar builtins en posiciones que no sean las primeras
cat Makefile | grep libft | echo "si"

Checkear mensajes de error, para ver que se asemejen a los de bash, teniendo en cuenta la salida stderr y los códigos de error.
Y darles uso!! (los mensajes de error están con printf y algunos salen con return y no exit, así que se pierde el exit code)

Gestionar señales

YA CORREGIDO:
Libero shell antes de ejecutar exit en el builtin.

YA CORREGIDO:
Trabajamos cd con nuestro propio enviroment en vez de con getenv.