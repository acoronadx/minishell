cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/exec/exec_utils.c -o obj/exec/exec_utils.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/exec/exec_cmd.c -o obj/exec/exec_cmd.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/exec/shell_exec.c -o obj/exec/shell_exec.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/exec/exec_builtins.c -o obj/exec/exec_builtins.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/exec/exec_pipe.c -o obj/exec/exec_pipe.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/error/errors.c -o obj/error/errors.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_pwd.c -o obj/builtins/builtin_pwd.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_echo.c -o obj/builtins/builtin_echo.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_cd.c -o obj/builtins/builtin_cd.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_unset.c -o obj/builtins/builtin_unset.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_export.c -o obj/builtins/builtin_export.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_env.c -o obj/builtins/builtin_env.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/builtins/builtin_exit.c -o obj/builtins/builtin_exit.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/parser_redirections.c -o obj/parser/parser_redirections.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/lexer.c -o obj/parser/lexer.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/lexer_utils.c -o obj/parser/lexer_utils.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/expand.c -o obj/parser/expand.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/parser_cmd.c -o obj/parser/parser_cmd.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/parser.c -o obj/parser/parser.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/parser/parser_cmd_utils.c -o obj/parser/parser_cmd_utils.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/env/env_init.c -o obj/env/env_init.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/env/env_utils.c -o obj/env/env_utils.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/core/prompt.c -o obj/core/prompt.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/core/main.c -o obj/core/main.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/core/close_shell.c -o obj/core/close_shell.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/core/init_shell.c -o obj/core/init_shell.o
cc -Wall -Wextra -Werror -Iinclude -Ilibft -c src/signals/signals.c -o obj/signals/signals.o
src/parser/lexer.c: In function ‘ft_add_word’:
src/parser/lexer.c:71:29: error: the address of ‘ft_issymbol’ will always evaluate as ‘true’ [-Werror=address]
   71 |         while (line[len] && !ft_issymbol)
      |                             ^
src/parser/parser_cmd.c: In function ‘parse_commands’:
src/parser/parser_cmd.c:82:17: error: implicit declaration of function ‘add_cmd_to_list’ [-Werror=implicit-function-declaration]
   82 |                 add_cmd_to_list(&head, &last, cmd);
      |                 ^~~~~~~~~~~~~~~
src/parser/parser.c: In function ‘handle_envvar’:
src/parser/parser.c:110:15: error: implicit declaration of function ‘ft_add_envvar’; did you mean ‘ft_isenvvar’? [-Werror=implicit-function-declaration]
  110 |         len = ft_add_envvar(shell, *pline);
      |               ^~~~~~~~~~~~~
      |               ft_isenvvar
src/core/init_shell.c:46:17: error: conflicting types for ‘init_env_list’; have ‘void(t_shell *, char **)’ {aka ‘void(struct s_shell *, char **)’}
   46 | static void     init_env_list(t_shell *shell, char **envp)
      |                 ^~~~~~~~~~~~~
In file included from src/core/init_shell.c:13:
include/minishell.h:113:18: note: previous declaration of ‘init_env_list’ with type ‘t_env *(char **)’ {aka ‘struct s_env *(char **)’}
  113 | t_env           *init_env_list(char **envp);
      |                  ^~~~~~~~~~~~~
src/parser/parser.c: In function ‘parse_line’:
src/parser/parser.c:124:26: error: implicit declaration of function ‘is_symbol’; did you mean ‘ft_issymbol’? [-Werror=implicit-function-declaration]
  124 |                 else if (is_symbol(*line))
      |                          ^~~~~~~~~
      |                          ft_issymbol
src/env/env_utils.c: In function ‘get_env_node’:
src/env/env_utils.c:86:46: error: passing argument 2 of ‘ft_strcmp’ discards ‘const’ qualifier from pointer target type [-Werror=discarded-qualifiers]
   86 |                 if (ft_strcmp(env_list->key, key) == 0)
      |                                              ^~~
In file included from include/minishell.h:17,
                 from src/env/env_utils.c:13:
libft/libft.h:66:67: note: expected ‘char *’ but argument is of type ‘const char *’
   66 | int                                     ft_strcmp(char *s1, char *s2);
      |                                                             ~~~~~~^~
make: *** [Makefile:33: obj/core/init_shell.o] Error 1
make: *** Se espera a que terminen otras tareas....
src/env/env_utils.c: In function ‘get_env_path’:
src/env/env_utils.c:106:16: error: implicit declaration of function ‘search_cmd_in_dirs’ [-Werror=implicit-function-declaration]
  106 |         full = search_cmd_in_dirs(dirs, cmd);
      |                ^~~~~~~~~~~~~~~~~~
src/env/env_utils.c:106:14: error: assignment to ‘char *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  106 |         full = search_cmd_in_dirs(dirs, cmd);
      |              ^
cc1: all warnings being treated as errors
src/env/env_utils.c:107:9: error: implicit declaration of function ‘free_split’; did you mean ‘ft_split’? [-Werror=implicit-function-declaration]
  107 |         free_split(dirs);
      |         ^~~~~~~~~~
      |         ft_split
src/exec/shell_exec.c: In function ‘parse_and_execute’:
src/exec/shell_exec.c:35:26: error: passing argument 1 of ‘free_tokens’ from incompatible pointer type [-Werror=incompatible-pointer-types]
   35 |         free_tokens(shell->tokens);
      |                     ~~~~~^~~~~~~~
      |                          |
      |                          t_token * {aka struct s_token *}
In file included from src/exec/shell_exec.c:13:
include/minishell.h:133:36: note: expected ‘char **’ but argument is of type ‘t_token *’ {aka ‘struct s_token *’}
  133 | void            free_tokens(char **tokens);
      |                             ~~~~~~~^~~~~~
make: *** [Makefile:33: obj/parser/lexer.o] Error 1
src/builtins/builtin_unset.c: In function ‘env_remove_key’:
src/builtins/builtin_unset.c:24:42: error: passing argument 2 of ‘ft_strcmp’ discards ‘const’ qualifier from pointer target type [-Werror=discarded-qualifiers]
   24 |                 if (ft_strcmp(curr->key, key) == 0)
      |                                          ^~~
In file included from include/minishell.h:17,
                 from src/builtins/builtin_unset.c:14:
libft/libft.h:66:67: note: expected ‘char *’ but argument is of type ‘const char *’
   66 | int                                     ft_strcmp(char *s1, char *s2);
      |                                                             ~~~~~~^~
src/builtins/builtin_unset.c: At top level:
src/builtins/builtin_unset.c:41:9: error: conflicting types for ‘builtin_unset’; have ‘int(t_shell *, char **)’ {aka ‘int(struct s_shell *, char **)’}
   41 | int     builtin_unset(t_shell *shell, char **args)
      |         ^~~~~~~~~~~~~
include/minishell.h:165:25: note: previous declaration of ‘builtin_unset’ with type ‘int(char **, t_shell *)’ {aka ‘int(char **, struct s_shell *)’}
  165 | int                     builtin_unset(char **args, t_shell *shell);
      |                         ^~~~~~~~~~~~~
cc1: all warnings being treated as errors
src/error/errors.c: In function ‘ft_print_exit_user_error’:
src/error/errors.c:24:9: error: implicit declaration of function ‘ft_dprintf’; did you mean ‘ft_printf’? [-Werror=implicit-function-declaration]
   24 |         ft_dprintf(1, "\033[31mError:\n\033[0m<<%s>>\n", msg);
      |         ^~~~~~~~~~
      |         ft_printf
src/builtins/builtin_unset.c: In function ‘builtin_unset’:
src/builtins/builtin_unset.c:52:25: error: implicit declaration of function ‘ft_dprintf’; did you mean ‘ft_printf’? [-Werror=implicit-function-declaration]
   52 |                         ft_dprintf(2, "unset: `%s`: not a valid identifier\n", args[i]);
      |                         ^~~~~~~~~~
      |                         ft_printf
make: *** [Makefile:33: obj/parser/parser_cmd.o] Error 1
src/builtins/builtin_export.c:98:9: error: conflicting types for ‘builtin_export’; have ‘int(t_shell *, char **)’ {aka ‘int(struct s_shell *, char **)’}
   98 | int     builtin_export(t_shell *shell, char **args)
      |         ^~~~~~~~~~~~~~
In file included from src/builtins/builtin_export.c:13:
include/minishell.h:164:25: note: previous declaration of ‘builtin_export’ with type ‘int(char **, t_shell *)’ {aka ‘int(char **, struct s_shell *)’}
  164 | int                     builtin_export(char **args, t_shell *shell);
      |                         ^~~~~~~~~~~~~~
cc1: all warnings being treated as errors
make: *** [Makefile:33: obj/builtins/builtin_unset.o] Error 1
make: *** [Makefile:33: obj/builtins/builtin_export.o] Error 1
cc1: all warnings being treated as errors
cc1: all warnings being treated as errors
make: *** [Makefile:33: obj/parser/parser.o] Error 1
make: *** [Makefile:33: obj/env/env_utils.o] Error 1
cc1: all warnings being treated as errors
src/core/close_shell.c:40:9: error: conflicting types for ‘free_tokens’; have ‘void(t_token *)’ {aka ‘void(struct s_token *)’}
   40 | void    free_tokens(t_token *token_list)
      |         ^~~~~~~~~~~
src/env/env_init.c: In function ‘handle_shlvl’:
src/env/env_init.c:19:18: error: unused variable ‘new_value’ [-Werror=unused-variable]
   19 |         char    *new_value;
      |                  ^~~~~~~~~
In file included from src/core/close_shell.c:13:
include/minishell.h:133:17: note: previous declaration of ‘free_tokens’ with type ‘void(char **)’
  133 | void            free_tokens(char **tokens);
      |                 ^~~~~~~~~~~
make: *** [Makefile:33: obj/exec/shell_exec.o] Error 1
make: *** [Makefile:33: obj/core/close_shell.o] Error 1
src/env/env_init.c: In function ‘init_env_list’:
src/env/env_init.c:60:29: error: implicit declaration of function ‘ft_split_once’; did you mean ‘ft_split’? [-Werror=implicit-function-declaration]
   60 |                 key_value = ft_split_once(envp[i], '=');
      |                             ^~~~~~~~~~~~~
      |                             ft_split
src/env/env_init.c:60:27: error: assignment to ‘char **’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
   60 |                 key_value = ft_split_once(envp[i], '=');
      |                           ^
src/env/env_init.c:63:25: error: implicit declaration of function ‘ft_free_split’; did you mean ‘ft_split’? [-Werror=implicit-function-declaration]
   63 |                         ft_free_split(key_value);
      |                         ^~~~~~~~~~~~~
      |                         ft_split
cc1: all warnings being treated as errors
make: *** [Makefile:33: obj/error/errors.o] Error 1
cc1: all warnings being treated as errors
make: *** [Makefile:33: obj/env/env_init.o] Error 1
